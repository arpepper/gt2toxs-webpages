head	1.1;
access;
symbols;
locks
	arpepper:1.1; strict;
comment	@# @;


1.1
date	2021.03.29.21.13.01;	author arpepper;	state Exp;
branches;
next	;


desc
@Specialized but generalizable script to find a probable lap time
in input and insert into such lines the time difference relative
to a standard.
@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w

sub
tothousandths {
	my ($s) = @@_;
	my ($mm,$ss,$ttt) = (0,0,0,0);
	
	# Should allow hours
	$s =~ /(((\d{0,1}):){0,1})(\d{1,2})\.(\d\d\d)/;

	#print "1:",$1,"\n" if defined $1;
	#print "2:",$2,"\n" if defined $2;
	#print "3:",$3,"\n" if defined $3;
	#print "4:",$4,"\n" if defined $4;
	#print "5:",$5,"\n" if defined $5;
	$mm = $3 if (defined($3));
	$ss = $4;
	$ttt = $5;
	return 1000 * ((60 * ($mm)) + $ss) + $ttt;
}

sub
timesplit {
	my ($thous) = @@_;
	my ($min, $sec, $ttt);
	my ($sign) = ("+");

	$ttt = $thous;
	if ($ttt < 0) {
		$sign = "-";
		$ttt = 0 - $ttt;
	}
	$min = int($ttt/60000);
	$ttt -= $min*60000;
	$sec = int($ttt/1000);
	$ttt -= $sec*1000;
	if ($min > 0) {
		sprintf("%s%d:%2.2d.%3.3d", $sign, $min, $sec, $ttt);
	}
	else {
		sprintf("%s%d.%3.3d", $sign, $sec, $ttt);
	}
}

	

$standard = "7:58.300";
$standardttt = tothousandths($standard);


while (<>) {
	$line = $_;
	undef $time;
	# Note: $1 tends to remain defined...
	"a" =~ /a/;  # undef $1
	$line =~ /((\d{0,1}:){0,1}\d{1,2}\.\d\d\d)/;

	$time = $1;
	if (defined($time)) {
#		printf("%s\n", $time);
#		printf("%d\n", tothousandths($time));
#			printf("%d\n", tothousandths($time) - $standardttt );
#		printf("%s\n", timesplit(tothousandths($time) - $standardttt) );
		$diff = timesplit(tothousandths($time) - $standardttt);
		$line =~ s/((\d{0,1}:){0,1}\d{1,2}\.\d\d\d)/$& $diff/;
	}
	print $line;
}
@
