#!/usr/bin/perl -w

require 5.002;
use strict;

$main::bspec = 0;
$main::machine = 0;
$main::course = 0;
$main::battle = 0;

sub
doauditb {
	my($line,$rest,$r1,$r2) = @_;

	my ($warn, $newbspec, $newmachine, $newcourse, $newbattle);
	my ($incbspec, $incmachine, $inccourse, $incbattle);
	my ($lineno,$note);
	$warn = "";
	if ( $rest =~ /B:(\d+)\/(\d+)\/(\d+)\/(\d+)/ ) {
		$newbspec = $1;
		$newmachine = $2;
		$newcourse = $3;
		$newbattle = $4;
		$lineno = "";
		if ($line =~ /^\s*(\d+)\s+/ ) {
			$lineno = " ".$1;
		}
		if ($rest =~ /B:\d+\/\d+\/\d+\/\d+ *\(n\/c\)/ ) {
			$incbspec = 0;
			$incmachine = 0;
			$inccourse = 0;
			$incbattle = 0;
		}
		elsif ($rest =~
		  /B:\d+\/\d+\/\d+\/\d+ *\(\+{0,1}(\d+)\/\+{0,1}(\d+)\/\+{0,1}(\d+)\/\+{0,1}(\d+)\)/ ) {
			$incbspec = $1;
			$incmachine = $2;
			$inccourse = $3;
			$incbattle = $4;
		}
		else {
#			$warn .= " NoInc";
			$incbspec = 0;
			$incmachine = 0;
			$inccourse = 0;
			$incbattle = 0;
		}
		my( $t, $c, $m, $b);
		$t = $newbspec - $main::bspec;
		$c = $newmachine - $main::machine;
		$m = $newcourse - $main::course;
		$b = $newbattle - $main::battle;
		$note =
			"Audit:$lineno B:$newbspec/$newmachine/$newcourse/$newbattle" .
			"($incbspec/$incmachine/$inccourse/$incbattle)" .
# Seems we should use new in following also; not clear what we are checking
			"  B:$newbspec/$newmachine/$newcourse/$newbattle" .
			"(+$t/+$c/+$m/+$b)" . "\n";

# Should check for inc < 0 duh!
		if ($newbspec != ($main::bspec + $incbspec) ) {
			$warn .= " Bspec";
		}
		if ($newmachine != ($main::machine + $incmachine) ) {
			$warn .= " Mac";
		}
		if ($newcourse != ($main::course + $inccourse) ) {
			$warn .= " C";
		}
		if ($newbattle != ($main::battle + $incbattle) ) {
			$warn .= " Bat";
		}
		if ($warn ne "") {
			$warn = " WARN -" . $warn;
		}
		$main::bspec = $newbspec;
		$main::machine = $newmachine;
		$main::course = $newcourse;
		$main::battle = $newbattle;
	}
	if ($warn ne "") {
		print $note;
		#warn("$warn: $line");
		print("Audit: $warn: $line\n");
	}
}

while (<>) {
	my ($line) = ($_);
	my ($rest);

	$line =~ s/\n//g;
	$rest = $line;
	$rest =~ s/\s*\d+\s+//;
	doauditb($line, $rest, 0,0);
	print $_;
}
